---
const { links, limit = -1 } = Astro.props;
export type ContentLink = {
  name: string;
  youTubeLink?: string;
  src?: string;
};
let linksToShow: ContentLink[] = links;
if (limit > 0) {
  linksToShow = links.slice(0, limit);
}
---

<div class="container">
  {
    linksToShow.map((link, index) => {
      return (
        <div>
          {index !== 0 && <hr />}
          <h2 class="link-header">{link.name}</h2>
          {link.youTubeLink ? (
            <iframe
              src={link.youTubeLink}
              title={link.name}
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
              allowfullscreen
            />
          ) : undefined}
          {link.src ? (
            <iframe src={link.src} />
          ) : undefined}
          {index === limit - 1 && <hr />}
        </div>
      );
    })
  }
</div>

<style>
  h2 {
    font-family: var(--font-family-sans);
    font-weight: 700;
  }

  .link-header {
    margin-bottom: 0.5em;

  }

  hr {
    margin: 60px auto;
  }

  iframe{
    width: 100%;
    aspect-ratio: 16 / 9
  }
</style>
